services:
    # PostgreSQL 데이터베이스 (개발 환경에서만 사용, 프로덕션에서는 RDS 사용)
    # postgres:
    #     image: postgres:16-alpine
    #     container_name: cookie-pokie-postgres
    #     restart: always
    #     environment:
    #         POSTGRES_USER: ${DB_USERNAME:-postgres}
    #         POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    #         POSTGRES_DB: ${DB_NAME:-cookie_pokie}
    #     ports:
    #         - "${DB_PORT:-5432}:5432"
    #     volumes:
    #         - postgres-data:/var/lib/postgresql/data
    #     networks:
    #         - cookie-pokie-network
    #     healthcheck:
    #         test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
    #         interval: 10s
    #         timeout: 5s
    #         retries: 5

    # 백엔드 서버
    server:
        build:
            context: ./server
            dockerfile: Dockerfile
        container_name: cookie-pokie-server
        restart: always
        environment:
            NODE_ENV: production
            PORT: ${SERVER_PORT:-4000}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT:-5432}
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            CLIENT_URL: ${CLIENT_URL}
        ports:
            - "${SERVER_PORT:-4000}:4000"
        networks:
            - cookie-pokie-network
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"

    # 프론트엔드 클라이언트 (개발 환경에서만 사용, 프로덕션에서는 S3+CloudFront 사용)
    # client:
    #     build:
    #         context: ./client
    #         dockerfile: Dockerfile
    #         args:
    #             NEXT_PUBLIC_API_URL: ${API_URL}
    #     container_name: cookie-pokie-client
    #     restart: always
    #     environment:
    #         NODE_ENV: production
    #         PORT: 3000
    #     ports:
    #         - "${CLIENT_PORT:-3000}:3000"
    #     depends_on:
    #         - server
    #     networks:
    #         - cookie-pokie-network

networks:
    cookie-pokie-network:
        driver: bridge
# volumes:
#     postgres-data:
